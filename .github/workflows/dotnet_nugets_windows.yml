name: .NET Nugets (Windows)

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - '*'

jobs:
  build_nuget_windows:
    runs-on: windows-latest

    steps:
      - name: 📥 Checkout repositório
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: 🛠️ Setup MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: 🧱 Instala Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: 📦 Instala dotnet-t4
        run: |
          dotnet tool install --global dotnet-t4

      - name: 🔄 Atualiza tags Git
        run: |
          set -eo pipefail
          git fetch --unshallow --tags --recurse-submodules=no

      - name: 🧠 Gera número de versão simbiótica
        id: get_version
        shell: bash
        run: |
          set -eo pipefail
          version=$(./utl/version_number.py)
          version_trimmed=$(echo $version | sed 's/\+.*//')
          echo "✅ Versão gerada: $version"
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "version_trimmed=$version_trimmed" >> $GITHUB_OUTPUT

      - name: ⚙️ Configura .NET Core
        run: |
          set -eo pipefail
          cmake -S . -B build -G Ninja ^
            -Dvw_BUILD_NET_CORE=On ^
            -Dvw_DOTNET_USE_MSPROJECT=Off ^
            -DVW_NUGET_PACKAGE_NAME=VowpalWabbit ^
            -DVW_NUGET_PACKAGE_VERSION="${{ steps.get_version.outputs.version }}" ^
            -DVW_NUGET_PACKAGE_VERSION_TRIMMED="${{ steps.get_version.outputs.version_trimmed }}" ^
            -DVW_FEAT_FLATBUFFERS=Off ^
            -DRAPIDJSON_SYS_DEP=Off ^
            -DFMT_SYS_DEP=Off ^
            -DSPDLOG_SYS_DEP=Off ^
            -DVW_ZLIB_SYS_DEP=Off ^
            -DVW_BOOST_MATH_SYS_DEP=Off ^
            -DVW_BUILD_VW_C_WRAPPER=Off ^
            -DBUILD_TESTING=Off ^
            -DBUILD_SHARED_LIBS=Off

      - name: 🏗️ Compila .NET Core
        run: |
          cmake --build build --config Release

      - name: 📂 Instala .NET Core
        run: |
          cmake --install build --prefix ./nuget_staging

      - name: ♻️ Reseta pasta de build
        run: Remove-Item -Recurse -Force .\build

      - name: ⚙️ Configura .NET Framework
        run: |
          set -eo pipefail
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 ^
            -Dvw_BUILD_NET_FRAMEWORK=On ^
            -DVW_NUGET_PACKAGE_NAME=VowpalWabbit ^
            -DVW_NUGET_PACKAGE_VERSION="${{ steps.get_version.outputs.version }}" ^
            -DVW_NUGET_PACKAGE_VERSION_TRIMMED="${{ steps.get_version.outputs.version_trimmed }}" ^
            -DVW_FEAT_FLATBUFFERS=Off ^
            -DRAPIDJSON_SYS_DEP=Off ^
            -DFMT_SYS_DEP=Off ^
            -DSPDLOG_SYS_DEP=Off ^
            -DVW_ZLIB_SYS_DEP=Off ^
            -DVW_BOOST_MATH_SYS_DEP=Off ^
            -DVW_BUILD_VW_C_WRAPPER=Off ^
            -DBUILD_TESTING=Off ^
            -DBUILD_SHARED_LIBS=Off

      - name: 🏗️ Compila .NET Framework
        run: cmake --build build --config Release

      - name: 📂 Instala .NET Framework
        run: cmake --install build --prefix ./nuget_staging

      - name: 📦 Empacota NuGet (Combined)
        shell: powershell
        id: generate-nuget
        run: |
          try {
            cd nuget_staging
            nuget pack dotnet.nuspec -ErrorAction Stop
            $NugetFileName = Get-ChildItem *.nupkg -name
            echo "NugetFileName=$NugetFileName" >> $env:GITHUB_OUTPUT
          } catch {
            Write-Error "❌ Erro ao empacotar NuGet: $_"
            exit 1
          }

      - name: 📤 Faz upload do pacote
        uses: actions/upload-artifact@v4
        with:
          name: VowpalWabbit.${{ steps.get_version.outputs.version }}.nupkg
          path: nuget_staging/${{ steps.generate-nuget.outputs.NugetFileName }}
